import numpy as np

from gage.nfg.generate_nfg import generate_nfg


def from_nfg(game, num_players, num_actions, num_objectives, batch_size=1, **kwargs):
    """Generate a multi-objective normal form game.

    The function generates multi-objective versions of the NFGs in the main library. These are generated by adding a new
    dimension to the payoff matrices. Multi-objective versions of these games ensure that the payoffs for each objective
    individually follow the same distribution.

    Args:
        game (str): The game to generate.
        num_players (int): The number of players.
        num_actions (int): The number of actions.
        num_objectives (int): The number of objectives.
        batch_size (int, optional): The batch size. Defaults to 1.

    Returns:
        np.ndarray: The batch of games.
    """
    ext_batch_size = batch_size * num_objectives
    games = generate_nfg(game, num_players, num_actions, batch_size=ext_batch_size, **kwargs)
    obj_payoffs = np.split(games, num_objectives)
    return np.stack(obj_payoffs, axis=-1)
